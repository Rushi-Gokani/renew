{% doc %}
  @prompt
    Create a Shopify section with a soft cream background featuring on the left a large product image inside a rounded green border and on the right a bold headline 'Enjoy Your Daily Greens', a short supporting paragraph, a vertical list of 2â€“3 features each with a circular green icon and short text, a green pill-shaped call-to-action button labeled 'See More Recipes', subtle carousel dots and arrow navigation for the images, with balanced whitespace, organic wellness-inspired styling, and fully responsive so that on mobile the content stacks with touch-friendly controls.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-greens-section-{{ ai_gen_id }} {
    background-color: {{ block.settings.background_color }};
    padding: 60px 20px;
    min-height: 500px;
  }

  .ai-greens-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    align-items: center;
  }

  .ai-greens-image-section-{{ ai_gen_id }} {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
  }

  .ai-greens-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: 400px;
    aspect-ratio: 1;
    border: {{ block.settings.border_width }}px solid {{ block.settings.border_color }};
    border-radius: {{ block.settings.border_radius }}px;
    overflow: hidden;background-color: #f8f8f8;
  }

  .ai-greens-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-greens-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-greens-image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-greens-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 14px;
    color: #666;
    text-align: center;
    background: rgba(255, 255, 255, 0.9);
    padding: 8px 16px;
    border-radius: 20px;
  }

  .ai-greens-carousel-controls-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 20px;
  }

  .ai-greens-dots-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
  }

  .ai-greens-dot-{{ ai_gen_id }} {
    width: 0px;
    height: 12px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_inactive_color }};
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-greens-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
  }

  .ai-greens-arrow-{{ ai_gen_id }} {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background-color: {{ block.settings.arrow_background }};
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s ease;
    color: {{ block.settings.arrow_color }};
  }

  .ai-greens-arrow-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.arrow_hover_background }};
  }

  .ai-greens-content-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 30px;
  }

  .ai-greens-headline-{{ ai_gen_id }} {
    font-size: {{ block.settings.headline_size }}px;
    font-weight: 700;
    color: {{ block.settings.headline_color }};
    margin: 0;
    line-height: 1.2;
  }

  .ai-greens-paragraph-{{ ai_gen_id }} {
    font-size: {{ block.settings.paragraph_size }}px;
    color: {{ block.settings.paragraph_color }};
    line-height: 1.6;
    margin: 0;
  }

  .ai-greens-features-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .ai-greens-feature-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .ai-greens-feature-icon-{{ ai_gen_id }} {
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    border-radius: 50%;
    background-color: {{ block.settings.icon_background }};
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    color: {{ block.settings.icon_color }};
  }

  .ai-greens-feature-text-{{ ai_gen_id }} {
    font-size: {{ block.settings.feature_text_size }}px;
    color: {{ block.settings.feature_text_color }};
    margin: 0;
  }

  .ai-greens-cta-{{ ai_gen_id }} {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 15px 30px;
    background-color: {{ block.settings.cta_background }};
    color: {{ block.settings.cta_text_color }};
    text-decoration: none;
    border-radius: 8px;
    font-size: {{ block.settings.cta_text_size }}px;
    font-weight: 600;
    transition: background-color 0.3s ease;
    border: none;
    cursor: pointer;
    max-width: fit-content;
  }

  .ai-greens-cta-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.cta_hover_background }};
  }

  @media screen and (max-width: 768px) {
    .ai-greens-section-{{ ai_gen_id }} {
      padding: 40px 20px;
    }

    .ai-greens-container-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 40px;
    }

    .ai-greens-image-wrapper-{{ ai_gen_id }} {
      max-width: 300px;
    }

    .ai-greens-headline-{{ ai_gen_id }} {
      font-size: {{ block.settings.headline_size | times: 0.8 }}px;
      text-align: center;
    }

    .ai-greens-paragraph-{{ ai_gen_id }} {
      text-align: center;
    }

    .ai-greens-features-{{ ai_gen_id }} {
      gap: 25px;
    }

    .ai-greens-feature-{{ ai_gen_id }} {
      justify-content: center;
      text-align: center;
      flex-direction: column;
      gap: 10px;
    }

    .ai-greens-cta-{{ ai_gen_id }} {
      align-self: center;
      padding: 18px 35px;
    }

    .ai-greens-arrow-{{ ai_gen_id }} {
      width: 50px;
      height: 50px;
    }
  }
{% endstyle %}

<greens-carousel-{{ ai_gen_id }}
  class="ai-greens-section-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-greens-container-{{ ai_gen_id }}">
    <div class="ai-greens-image-section-{{ ai_gen_id }}">
      <div class="ai-greens-image-wrapper-{{ ai_gen_id }}">
        {% if block.settings.product_image_1 %}
          <img
            src="{{ block.settings.product_image_1 | image_url: width: 500 }}"
            alt="{{ block.settings.product_image_1.alt | escape }}"
            class="ai-greens-image-{{ ai_gen_id }} ai-greens-image-active-{{ ai_gen_id }}"loading="lazy"
            width="500"
            height="500"data-image-index="0"
          >
        {% endif %}
        
        {% if block.settings.product_image_2 %}
          <img
            src="{{ block.settings.product_image_2 | image_url: width: 500 }}"
            alt="{{ block.settings.product_image_2.alt | escape }}"
            class="ai-greens-image-{{ ai_gen_id }}"
            loading="lazy"
            width="500"
            height="500"
            data-image-index="1"
            style="display: none;"
          >
        {% endif %}
        
        {% if block.settings.product_image_3 %}
          <img
            src="{{ block.settings.product_image_3 | image_url: width: 500 }}"
            alt="{{ block.settings.product_image_3.alt | escape }}"
            class="ai-greens-image-{{ ai_gen_id }}"
            loading="lazy"
            width="500"
            height="500"
            data-image-index="2"
            style="display: none;"
          >
        {% endif %}
        
        {% unless block.settings.product_image_1 %}
          <div class="ai-greens-image-placeholder-{{ ai_gen_id }}">
            {{ 'product-apparel-1' | placeholder_svg_tag }}
            <div class="ai-greens-empty-state-{{ ai_gen_id }}">
              Add product images
            </div>
          </div>
        {% endunless %}</div>

      {% assign image_count = 0 %}
      {% if block.settings.product_image_1 %}{% assign image_count = image_count | plus: 1 %}{% endif %}
      {% if block.settings.product_image_2 %}{% assign image_count = image_count | plus: 1 %}{% endif %}
      {% if block.settings.product_image_3 %}{% assign image_count = image_count | plus: 1 %}{% endif %}

      {% if image_count > 1 %}
        <div class="ai-greens-carousel-controls-{{ ai_gen_id }}">
          <button class="ai-greens-arrow-{{ ai_gen_id }} ai-greens-prev-{{ ai_gen_id }}" aria-label="Previous image">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="15,18 9,12 15,6"></polyline>
            </svg>
          </button>

          <div class="ai-greens-dots-{{ ai_gen_id }}">
            {% for i in (0..2) %}
              {% if i == 0 and block.settings.product_image_1 %}
                <button class="ai-greens-dot-{{ ai_gen_id }} active" data-index="0" aria-label="View image 1"></button>
              {% elsif i == 1 and block.settings.product_image_2 %}
                <button class="ai-greens-dot-{{ ai_gen_id }}" data-index="1" aria-label="View image 2"></button>
              {% elsif i == 2 and block.settings.product_image_3 %}
                <button class="ai-greens-dot-{{ ai_gen_id }}" data-index="2" aria-label="View image 3"></button>
              {% endif %}
            {% endfor %}
          </div>

          <button class="ai-greens-arrow-{{ ai_gen_id }} ai-greens-next-{{ ai_gen_id }}" aria-label="Next image">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="9,18 15,12 9,6"></polyline>
            </svg>
          </button>
        </div>
      {% endif %}
    </div>

    <div class="ai-greens-content-{{ ai_gen_id }}">
      {% if block.settings.headline != blank %}
        <h2 class="ai-greens-headline-{{ ai_gen_id }}">{{ block.settings.headline }}</h2>
      {% endif %}

      {% if block.settings.paragraph != blank %}
        <div class="ai-greens-paragraph-{{ ai_gen_id }}">{{ block.settings.paragraph }}</div>
      {% endif %}

      <div class="ai-greens-features-{{ ai_gen_id }}">
        {% if block.settings.feature_1_text != blank %}
          <div class="ai-greens-feature-{{ ai_gen_id }}">
            <div class="ai-greens-feature-icon-{{ ai_gen_id }}">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="20,6 9,17 4,12"></polyline>
              </svg>
            </div>
            <p class="ai-greens-feature-text-{{ ai_gen_id }}">{{ block.settings.feature_1_text }}</p>
          </div>
        {% endif %}

        {% if block.settings.feature_2_text != blank %}
          <div class="ai-greens-feature-{{ ai_gen_id }}">
            <div class="ai-greens-feature-icon-{{ ai_gen_id }}">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="20,6 9,17 4,12"></polyline>
              </svg>
            </div>
            <p class="ai-greens-feature-text-{{ ai_gen_id }}">{{ block.settings.feature_2_text }}</p>
          </div>
        {% endif %}

        {% if block.settings.feature_3_text != blank %}
          <div class="ai-greens-feature-{{ ai_gen_id }}">
            <div class="ai-greens-feature-icon-{{ ai_gen_id }}">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="20,6 9,17 4,12"></polyline>
              </svg>
            </div>
            <p class="ai-greens-feature-text-{{ ai_gen_id }}">{{ block.settings.feature_3_text }}</p>
          </div>
        {% endif %}
      </div>

      {% if block.settings.cta_text != blank %}
        <a href="{{ block.settings.cta_link }}" class="ai-greens-cta-{{ ai_gen_id }}">
          {{ block.settings.cta_text }}
        </a>
      {% endif %}
    </div>
  </div>
</greens-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class GreensCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.images = [];
        this.dots = [];
      }

      connectedCallback() {
        this.images = this.querySelectorAll('.ai-greens-image-{{ ai_gen_id }}');
        this.dots = this.querySelectorAll('.ai-greens-dot-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-greens-prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-greens-next-{{ ai_gen_id }}');

        if (this.images.length > 1) {
          this.setupEventListeners();
        }
      }

      setupEventListeners() {
        this.dots.forEach((dot, index) => {
          dot.addEventListener('click', () => this.goToSlide(index));
        });

        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.previousSlide());
        }

        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.nextSlide());
        }

        let startX = 0;
        let endX = 0;

        this.addEventListener('touchstart', (e) => {
          startX = e.touches[0].clientX;
        });

        this.addEventListener('touchend', (e) => {
          endX = e.changedTouches[0].clientX;this.handleSwipe(startX, endX);
        });
      }

      handleSwipe(startX, endX) {
        const threshold = 50;
        const diff = startX - endX;

        if (Math.abs(diff) > threshold) {
          if (diff > 0) {
            this.nextSlide();
          } else {
            this.previousSlide();
          }
        }
      }

      goToSlide(index) {
        this.images.forEach((img, i) => {
          img.style.display = i === index ? 'block' : 'none';
        });

        this.dots.forEach((dot, i) => {
          dot.classList.toggle('active', i === index);
        });

        this.currentIndex = index;
      }

      nextSlide() {
        const nextIndex = (this.currentIndex + 1) % this.images.length;
        this.goToSlide(nextIndex);
      }

      previousSlide() {
        const prevIndex = (this.currentIndex - 1 + this.images.length) % this.images.length;
        this.goToSlide(prevIndex);
      }
    }

    customElements.define('greens-carousel-{{ ai_gen_id }}', GreensCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Daily greens section",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "headline",
      "label": "Headline",
      "default": "Enjoy Your Daily Greens"
    },
    {
      "type": "richtext",
      "id": "paragraph",
      "label": "Supporting text",
      "default": "<p>Discover the perfect blend of nutrition and taste with our carefully crafted green recipes that make healthy eating enjoyable.</p>"
    },
    {
      "type": "text",
      "id": "feature_1_text",
      "label": "Feature 1 text",
      "default": "100% organic ingredients"
    },
    {
      "type": "text",
      "id": "feature_2_text",
      "label": "Feature 2 text",
      "default": "Rich in vitamins and minerals"
    },
    {
      "type": "text",
      "id": "feature_3_text",
      "label": "Feature 3 text",
      "default": "Sustainably sourced"
    },
    {
      "type": "text",
      "id": "cta_text",
      "label": "Button text",
      "default": "See More Recipes"
    },
    {
      "type": "url",
      "id": "cta_link",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Product images"
    },
    {
      "type": "image_picker",
      "id": "product_image_1",
      "label": "Product image 1"
    },
    {
      "type": "image_picker",
      "id": "product_image_2",
      "label": "Product image 2"
    },
    {
      "type": "image_picker",
      "id": "product_image_3",
      "label": "Product image 3"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#f8f6f0"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Image border color",
      "default": "#4a7c59"
    },
    {
      "type": "color",
      "id": "headline_color",
      "label": "Headline color",
      "default": "#2d3748"
    },
    {
      "type": "color",
      "id": "paragraph_color",
      "label": "Text color",
      "default": "#4a5568"
    },
    {
      "type": "color",
      "id": "feature_text_color",
      "label": "Feature text color",
      "default": "#2d3748"
    },
    {
      "type": "color",
      "id": "icon_background",
      "label": "Icon background color",
      "default": "#4a7c59"
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Icon color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "cta_background",
      "label": "Button background color",
      "default": "#4a7c59"
    },
    {
      "type": "color",
      "id": "cta_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "cta_hover_background",
      "label": "Button hover color",
      "default": "#3d6b4a"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot color",
      "default": "#4a7c59"
    },
    {
      "type": "color",
      "id": "dot_inactive_color",
      "label": "Inactive dot color",
      "default": "#cbd5e0"
    },
    {
      "type": "color",
      "id": "arrow_background",
      "label": "Arrow background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "arrow_color",
      "label": "Arrow color",
      "default": "#4a7c59"
    },
    {
      "type": "color",
      "id": "arrow_hover_background",
      "label": "Arrow hover background",
      "default": "#f7fafc"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "headline_size",
      "min": 24,
      "max": 72,
      "step": 2,
      "unit": "px",
      "label": "Headline size",
      "default": 48
    },
    {
      "type": "range",
      "id": "paragraph_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Paragraph size",
      "default": 16
    },
    {
      "type": "range",
      "id": "feature_text_size",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Feature text size",
      "default": 16
    },
    {
      "type": "range",
      "id": "cta_text_size",
      "min": 14,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Button text size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "border_width",
      "min": 2,
      "max": 8,
      "step": 1,
      "unit": "px",
      "label": "Image border width",
      "default": 4
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 10,
      "max": 50,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 24
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 30,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Icon size",
      "default": 40
    }
  ],
  "presets": [
    {
      "name": "Daily greens section"
    }
  ]
}
{% endschema %}