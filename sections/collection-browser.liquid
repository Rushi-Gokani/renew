
<script
  src="{{ 'results-list.js' | asset_url }}"
  type="module"
  fetchpriority="low"
></script>

{% liquid
  assign selected_collection = section.settings.collection | default: collections.all
%}

<div class="section-background color-{{ section.settings.color_scheme }}"></div>
<results-list
  class="section product-grid-container color-{{ section.settings.color_scheme }}"
  style="--padding-block-start: {{ section.settings.padding-block-start }}px; --padding-block-end: {{ section.settings.padding-block-end }}px;"
  section-id="{{ section.id }}"
>
  {% if section.settings.show_toolbar %}
    <div class="collection-browser__toolbar">
      {% if section.settings.show_primary_toggle %}
        {% assign toggle_active = false %}
        {% if request.query['filter.p.tag'] contains section.settings.primary_toggle_tag %}
          {% assign toggle_active = true %}
        {% endif %}
        <a
          class="cb-toggle {% if toggle_active %}is-active{% endif %}"
          href="{{ selected_collection.url | append: '?filter.p.tag=' | append: section.settings.primary_toggle_tag }}"
        >
          <span class="cb-toggle__switch" aria-hidden="true"></span>
          <span class="cb-toggle__label">{{ section.settings.primary_toggle_label }}</span>
        </a>
      {% endif %}

      <div class="cb-chips">
        {% for i in (1..6) %}
          {% assign label = section.settings["chip_" | append: i | append: "_label"] %}
          {% assign type = section.settings["chip_" | append: i | append: "_type"] %}
          {% assign value = section.settings["chip_" | append: i | append: "_value"] %}
          {% if label and value %}
            {% liquid
              assign qp = ''
              case type
                when 'tag'
                  assign qp = 'filter.p.tag='
                when 'product_type'
                  assign qp = 'filter.p.product_type='
                when 'vendor'
                  assign qp = 'filter.p.vendor='
              endcase
              assign href = selected_collection.url | append: '?' | append: qp | append: value
              assign is_active = request.query[qp | split: '=' | first] == value or request.query['filter.p.tag'] contains value
            %}
            <a class="cb-chip {% if is_active %}is-active{% endif %}" href="{{ href }}">
              {{- label -}}
            </a>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  {% endif %}
  {% render 'skip-to-content-link', href: '#ResultsList', text: 'accessibility.skip_to_results_list' %}

  <div
    class="collection-wrapper grid gap-style"
  >
    <aside class="cb-filters facets--vertical" role="complementary">
      <h3 class="cb-filters__heading">By Health Goal</h3>
      {% for filter in selected_collection.filters %}
        {% if filter.param_name contains 'filter.p.tag' or filter.type == 'list' %}
          <div class="cb-filter-group">
            <div class="cb-filter-group__title">{{ filter.label }}</div>
            <ul class="cb-filter-group__list">
              {% for filter_value in filter.values %}
                <li>
                  {% assign is_active = filter_value.active %}
                  <a class="cb-filter__item{% if is_active %} is-active{% endif %}"
                     href="{% if is_active %}{{ filter_value.url_to_remove }}{% else %}{{ filter_value.url_to_add }}{% endif %}">
                    <span class="cb-checkbox" aria-hidden="true"></span>
                    <span class="cb-filter__label">{{ filter_value.label }}</span>
                  </a>
                </li>
              {% endfor %}
            </ul>
          </div>
        {% endif %}
      {% endfor %}

      <h3 class="cb-filters__heading">Product Type</h3>
      {% for filter in selected_collection.filters %}
        {% if filter.param_name contains 'filter.p.product_type' %}
          <div class="cb-filter-group">
            <div class="cb-filter-group__title">{{ filter.label }}</div>
            <ul class="cb-filter-group__list">
              {% for filter_value in filter.values %}
                <li>
                  <a class="cb-filter__item{% if filter_value.active %} is-active{% endif %}"
                     href="{% if filter_value.active %}{{ filter_value.url_to_remove }}{% else %}{{ filter_value.url_to_add }}{% endif %}">
                    <span class="cb-checkbox" aria-hidden="true"></span>
                    <span class="cb-filter__label">{{ filter_value.label }}</span>
                  </a>
                </li>
              {% endfor %}
            </ul>
          </div>
        {% endif %}
      {% endfor %}
    </aside>

    {% paginate selected_collection.products by section.settings.per_page %}
      <div class="cb-results-row">
        <div class="cb-results-count">
          {{ 'Showing ' }}{{ paginate.items }}{{ ' results' }}
        </div>
        <a class="cb-reset" href="{{ selected_collection.url }}">{{ 'Reset all filters' }}</a>
      </div>
      <ul id="ResultsList" class="cb-grid" role="list">
        {% for product in selected_collection.products %}
          <li class="cb-card" id="{{ section.id }}-{{ product.id }}" data-page="{{ paginate.current_page }}">
            <a class="cb-card__media" href="{{ product.url }}">
              {% if product.featured_media %}
                {{ product.featured_media | image_url: width: 1200 | image_tag: loading: 'lazy', sizes: '(min-width: 750px) 33vw, 100vw', class: 'cb-card__img' }}
              {% else %}
                <div class="cb-card__placeholder"></div>
              {% endif %}
            </a>
            <div class="cb-card__content">
              <h3 class="cb-card__title"><a href="{{ product.url }}">{{ product.title }}</a></h3>
              <div class="cb-card__excerpt">{{ product.description | strip_html | truncate: 120 }}</div>
              <div class="cb-card__price">
                {% if product.compare_at_price > product.price %}
                  <span class="cb-price--compare">{{ product.compare_at_price | money }}</span>
                {% endif %}
                <span class="cb-price">{{ product.price | money }}</span>
              </div>
              {% assign add_variant = product.selected_or_first_available_variant %}
              <form method="post" action="/cart/add" class="cb-card__form">
                <input type="hidden" name="id" value="{{ add_variant.id }}" />
                <input type="hidden" name="quantity" value="1" />
                <button type="submit" class="cb-btn" {% unless product.available %}disabled{% endunless %}>
                  Add to Cart
                </button>
              </form>
            </div>
          </li>
        {% endfor %}
      </ul>

      {% if paginate.pages > 1 %}
        <nav class="cb-pagination" role="navigation">
          {% if paginate.previous %}
            <a class="cb-page-link" href="{{ paginate.previous.url }}">Previous</a>
          {% endif %}
          <span class="cb-page-count">{{ paginate.current_page }} / {{ paginate.pages }}</span>
          {% if paginate.next %}
            <a class="cb-page-link" href="{{ paginate.next.url }}">Next</a>
          {% endif %}
        </nav>
      {% endif %}
    {% endpaginate %}
  </div>
</results-list>

{% stylesheet %}
  :root {
    --cb-chip-radius: 999px;
    --cb-chip-bg: #f0f3ed;
    --cb-chip-bg-active: #e3efe0;
    --cb-chip-border: #d7ddcf;
    --cb-toolbar-gap: 12px;
  }

  .collection-browser__toolbar {
    display: flex;
    flex-wrap: wrap;
    gap: var(--cb-toolbar-gap);
    align-items: center;
    margin-block-end: 16px;
    padding-inline: var(--page-margin);
  }

  .cb-toggle {
    --toggle-height: 34px;
    display: inline-flex;
    align-items: center;
    gap: 10px;
    background: var(--cb-chip-bg);
    border-radius: var(--cb-chip-radius);
    padding: 4px 14px 4px 8px;
    text-decoration: none;
    color: var(--color-foreground);
    border: 1px solid var(--cb-chip-border);
  }

  .cb-toggle__switch {
    width: var(--toggle-height);
    height: var(--toggle-height);
    border-radius: 999px;
    background: #d6ddcf;
    position: relative;
  }

  .cb-toggle__switch::after {
    content: '';
    position: absolute;
    top: 3px;
    left: 3px;
    width: calc(var(--toggle-height) - 6px);
    height: calc(var(--toggle-height) - 6px);
    border-radius: 50%;
    background: #fff;
    box-shadow: 0 1px 2px rgb(0 0 0 / 15%);
    transition: transform var(--animation-speed-fast) ease;
  }

  .cb-toggle.is-active {
    background: var(--cb-chip-bg-active);
    border-color: transparent;
  }

  .cb-toggle.is-active .cb-toggle__switch::after {
    transform: translateX(100%);
  }

  .cb-chip {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 10px 14px;
    border-radius: var(--cb-chip-radius);
    background: var(--cb-chip-bg);
    color: var(--color-foreground);
    text-decoration: none;
    border: 1px solid var(--cb-chip-border);
    box-shadow: 0 1px 0 rgba(0,0,0,.04);
  }

  .cb-chip.is-active {
    background: var(--cb-chip-bg-active);
    border-color: transparent;
  }

  .cb-chip__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
  }

  .cb-results-row {
    grid-column: var(--grid-column--mobile);
    display: flex;
    align-items: baseline;
    justify-content: flex-start;
    gap: 12px;
    margin: 0 0 12px 0;
  }
  @media screen and (min-width: 750px) {
    .cb-results-row {
      grid-column: var(--grid-column--desktop);
    }
  }
  .cb-results-count { color: var(--color-foreground-secondary); font-size: .95rem; }
  .cb-reset { color: var(--color-foreground); text-decoration: underline; }

  /* Filters */
  .cb-filters { grid-column: var(--grid-column--mobile); }
  @media screen and (min-width: 750px) { .cb-filters { grid-column: var(--grid-column--desktop-start) / span 2; } }
  .cb-filters__heading { font-weight: 600; margin: 0 0 8px; }
  .cb-filter-group { margin: 8px 0 20px; }
  .cb-filter-group__title { color: var(--color-foreground-secondary); margin-bottom: 10px; font-size: .95rem; }
  .cb-filter-group__list { list-style: none; padding: 0; margin: 0; display: grid; gap: 8px; }
  .cb-filter__item { display: inline-flex; align-items: center; gap: 10px; text-decoration: none; color: var(--color-foreground); }
  .cb-filter__item.is-active .cb-checkbox { background: #3aa65a; border-color: #3aa65a; }
  .cb-checkbox { width: 18px; height: 18px; border: 1px solid var(--cb-chip-border); border-radius: 4px; background: #fff; box-shadow: inset 0 0 0 2px #fff; }

  /* Grid */
  .cb-grid { list-style: none; padding: 0; margin: 0; grid-column: var(--grid-column--mobile); display: grid; gap: 20px; }
  @media screen and (min-width: 750px) { .cb-grid { grid-column: var(--grid-column--desktop); grid-template-columns: repeat(3, minmax(0, 1fr)); } }
  .cb-card { display: flex; flex-direction: column; background: #fff; border-radius: 12px; overflow: hidden; border: 1px solid #e6e6e6; box-shadow: 0 1px 2px rgba(0,0,0,.04); }
  .cb-card__media { display: block; background: #fafafa; }
  .cb-card__img { width: 100%; height: auto; display: block; }
  .cb-card__placeholder { aspect-ratio: 4/5; background: #f4f4f4; }
  .cb-card__content { padding: 16px; display: grid; gap: 10px; }
  .cb-card__title { font-size: 1.35rem; margin: 0; }
  .cb-card__excerpt { color: var(--color-foreground-secondary); font-size: .95rem; }
  .cb-card__price { display: flex; align-items: center; gap: 10px; }
  .cb-price--compare { text-decoration: line-through; color: var(--color-foreground-secondary); }
  .cb-btn { appearance: none; border: 0; background: #3aa65a; color: #fff; padding: 12px 16px; border-radius: 999px; font-weight: 700; cursor: pointer; }
  .cb-btn[disabled] { background: #b7c2b6; cursor: not-allowed; }

  /* Pagination */
  .cb-pagination { margin-top: 20px; display: flex; align-items: center; gap: 12px; justify-content: center; }
  .cb-page-link { text-decoration: none; color: var(--color-foreground); padding: 8px 12px; border: 1px solid var(--cb-chip-border); border-radius: 8px; }
  .cb-page-count { color: var(--color-foreground-secondary); }

  .collection-wrapper {
    @media screen and (min-width: 750px) {
      grid-template-columns:
        1fr repeat(
          var(--centered-column-number),
          minmax(0, calc((var(--page-width) - var(--page-margin) * 2) / var(--centered-column-number)))
        )
        1fr;
    }
  }
{% endstylesheet %}

{% schema %}
{
  "name": "Collection browser",
  "class": "ui-test-collection-browser",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "checkbox",
      "id": "show_toolbar",
      "label": "Show toolbar (toggle + chips)",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_primary_toggle",
      "label": "Show primary toggle",
      "default": true,
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "text",
      "id": "primary_toggle_label",
      "label": "Primary toggle label",
      "default": "Subscribe & Save 20%",
      "visible_if": "{{ section.settings.show_toolbar and section.settings.show_primary_toggle }}"
    },
    {
      "type": "text",
      "id": "primary_toggle_tag",
      "label": "Primary toggle product tag",
      "info": "Tag to filter by when toggle is active",
      "default": "Subscription",
      "visible_if": "{{ section.settings.show_toolbar and section.settings.show_primary_toggle }}"
    },
    {
      "type": "header",
      "content": "Quick filter chips",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "paragraph",
      "content": "Each chip links to a filter query. Make sure your filters are enabled in Storefront filtering for best results.",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "text",
      "id": "chip_1_label",
      "label": "Chip 1 label",
      "default": "Bundle & Save",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "select",
      "id": "chip_1_type",
      "label": "Chip 1 filter type",
      "options": [
        { "value": "tag", "label": "Tag" },
        { "value": "product_type", "label": "Product type" },
        { "value": "vendor", "label": "Vendor" }
      ],
      "default": "tag",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "text",
      "id": "chip_1_value",
      "label": "Chip 1 value",
      "default": "Bundle",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "text",
      "id": "chip_2_label",
      "label": "Chip 2 label",
      "default": "Best Sellers",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "select",
      "id": "chip_2_type",
      "label": "Chip 2 filter type",
      "options": [
        { "value": "tag", "label": "Tag" },
        { "value": "product_type", "label": "Product type" },
        { "value": "vendor", "label": "Vendor" }
      ],
      "default": "tag",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "text",
      "id": "chip_2_value",
      "label": "Chip 2 value",
      "default": "Best Seller",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "text",
      "id": "chip_3_label",
      "label": "Chip 3 label",
      "default": "Rheal x Vita Coco Bundles",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "select",
      "id": "chip_3_type",
      "label": "Chip 3 filter type",
      "options": [
        { "value": "tag", "label": "Tag" },
        { "value": "product_type", "label": "Product type" },
        { "value": "vendor", "label": "Vendor" }
      ],
      "default": "tag",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "text",
      "id": "chip_3_value",
      "label": "Chip 3 value",
      "default": "Vita Coco",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    {
      "type": "text",
      "id": "chip_4_label",
      "label": "Chip 4 label",
      "visible_if": "{{ section.settings.show_toolbar }}"
    },
    { "type": "select", "id": "chip_4_type", "label": "Chip 4 filter type", "options": [ {"value": "tag", "label": "Tag"}, {"value": "product_type", "label": "Product type"}, {"value": "vendor", "label": "Vendor"} ], "default": "tag", "visible_if": "{{ section.settings.show_toolbar }}" },
    { "type": "text", "id": "chip_4_value", "label": "Chip 4 value", "visible_if": "{{ section.settings.show_toolbar }}" },
    {
      "type": "range",
      "id": "per_page",
      "label": "Products per page",
      "min": 4,
      "max": 48,
      "step": 4,
      "default": 24
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:settings.color_scheme",
      "default": "scheme-1"
    },
    {
      "type": "range",
      "id": "padding-block-start",
      "label": "t:settings.top_padding",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 8
    },
    {
      "type": "range",
      "id": "padding-block-end",
      "label": "t:settings.bottom_padding",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 8
    }
  ],
  "presets": [
    {
      "name": "Collection browser",
      "category": "t:categories.products"
    }
  ],
  "enabled_on": {
    "templates": ["index", "page", "collection", "list-collections", "search", "product"]
  }
}
{% endschema %}


